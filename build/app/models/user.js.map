{"version":3,"sources":["../../../src/app/models/user.js"],"names":["User","Model","init","sequelize","name","Sequelize","STRING","email","password","VIRTUAL","password_hash","addHook","user","bcrypt","hash","associate","models","hasMany","Cashier","foreignKey","as","onDelete","Category","checkPassword","compare"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;AAEA,MAAMA,IAAN,SAAmBC,gBAAnB,CAAyB;AACvB,SAAOC,IAAP,CAAYC,SAAZ,EAAuB;AACrB,UAAMD,IAAN,CACE;AACEE,MAAAA,IAAI,EAAEC,mBAAUC,MADlB;AAEEC,MAAAA,KAAK,EAAEF,mBAAUC,MAFnB;AAGEE,MAAAA,QAAQ,EAAEH,mBAAUI,OAHtB;AAIEC,MAAAA,aAAa,EAAEL,mBAAUC;AAJ3B,KADF,EAOE;AAAEH,MAAAA;AAAF,KAPF;AAUA,SAAKQ,OAAL,CAAa,YAAb,EAA2B,MAAMC,IAAN,IAAc;AACvC,UAAIA,IAAI,CAACJ,QAAT,EAAmB;AACjBI,QAAAA,IAAI,CAACF,aAAL,GAAqB,MAAMG,kBAAOC,IAAP,CAAYF,IAAI,CAACJ,QAAjB,EAA2B,CAA3B,CAA3B;AACD;AACF,KAJD;AAMA,WAAO,IAAP;AACD;;AAED,SAAOO,SAAP,CAAiBC,MAAjB,EAAyB;AACvB,SAAKC,OAAL,CAAaD,MAAM,CAACE,OAApB,EAA6B;AAC3BC,MAAAA,UAAU,EAAE,SADe;AAE3BC,MAAAA,EAAE,EAAE,UAFuB;AAG3BC,MAAAA,QAAQ,EAAE;AAHiB,KAA7B;AAKA,SAAKJ,OAAL,CAAaD,MAAM,CAACM,QAApB,EAA8B;AAC5BH,MAAAA,UAAU,EAAE,SADgB;AAE5BC,MAAAA,EAAE,EAAE,YAFwB;AAG5BC,MAAAA,QAAQ,EAAE;AAHkB,KAA9B;AAKD;;AAEDE,EAAAA,aAAa,CAACf,QAAD,EAAW;AACtB,WAAOK,kBAAOW,OAAP,CAAehB,QAAf,EAAyB,KAAKE,aAA9B,CAAP;AACD;;AApCsB;;eAuCVV,I","sourcesContent":["import Sequelize, { Model } from 'sequelize';\nimport bcrypt from 'bcryptjs';\n\nclass User extends Model {\n  static init(sequelize) {\n    super.init(\n      {\n        name: Sequelize.STRING,\n        email: Sequelize.STRING,\n        password: Sequelize.VIRTUAL,\n        password_hash: Sequelize.STRING,\n      },\n      { sequelize }\n    );\n\n    this.addHook('beforeSave', async user => {\n      if (user.password) {\n        user.password_hash = await bcrypt.hash(user.password, 8);\n      }\n    });\n\n    return this;\n  }\n\n  static associate(models) {\n    this.hasMany(models.Cashier, {\n      foreignKey: 'user_id',\n      as: 'cashiers',\n      onDelete: 'CASCADE',\n    });\n    this.hasMany(models.Category, {\n      foreignKey: 'user_id',\n      as: 'categories',\n      onDelete: 'CASCADE',\n    });\n  }\n\n  checkPassword(password) {\n    return bcrypt.compare(password, this.password_hash);\n  }\n}\n\nexport default User;\n"],"file":"user.js"}