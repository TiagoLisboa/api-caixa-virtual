{"version":3,"sources":["../../../src/app/controllers/CashierController.js"],"names":["CashierController","index","req","res","user_id","userId","page","query","cashiers","Cashier","findAll","where","limit","offset","send","CashierCollection","show","id","params","cashierId","cashier","findOne","include","model","Transaction","as","Category","status","error","ReportResourcer","store","cashierSchema","Joi","object","name","string","required","result","body","e","ValidationException","user","User","findByPk","createCashier","CashierResourcer","err","message","update","destroy"],"mappings":"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","sourcesContent":["import Joi from 'joi';\n\nimport validateSchema from '../utils/validateSchema';\nimport ValidationException from '../exceptions/ValidationException';\n\nimport Cashier from '../models/cashier';\nimport Category from '../models/category';\nimport Transaction from '../models/transaction';\nimport User from '../models/user';\n\nimport CashierResourcer from '../resources/Cashier';\nimport CashierCollection from '../resources/CashierCollection';\nimport ReportResourcer from '../resources/Report';\n\nclass CashierController {\n  /**\n   * displays a listing of the resource.\n   *\n   * @param {Request}  req\n   * @param {Response} res\n   *\n   * @return {void}\n   */\n  async index(req, res) {\n    const user_id = req.userId;\n    const { page = 1 } = req.query;\n\n    const cashiers = await Cashier.findAll({\n      where: { user_id },\n      limit: 20,\n      offset: (page - 1) * 20,\n    });\n\n    return res.send(new CashierCollection(cashiers));\n  }\n\n  /**\n   * displays a visualization of the specified resource.\n   *\n   * @param {Request}  req\n   * @param {Response} res\n   *\n   * @return {void}\n   */\n  async show(req, res) {\n    const id = req.params.cashierId;\n\n    const cashier = await Cashier.findOne({\n      where: { id },\n      include: [\n        {\n          model: Transaction,\n          as: 'transactions',\n          include: Category,\n        },\n      ],\n    });\n    if (!cashier) {\n      return res.status(404).send({\n        error: 'Cashier not found!',\n      });\n    }\n\n    return res.send(new ReportResourcer(cashier));\n  }\n\n  /**\n   * stores a instance of the resource.\n   *\n   * @param {Request}  req\n   * @param {Response} res\n   *\n   * @return {void}\n   */\n  async store(req, res) {\n    const cashierSchema = Joi.object({\n      name: Joi.string().required(),\n    });\n    let result;\n    try {\n      result = validateSchema(req.body, cashierSchema);\n    } catch (e) {\n      if (e instanceof ValidationException) {\n        return res.status(422).send(e);\n      }\n    }\n    try {\n      const user = await User.findByPk(req.userId);\n      const cashier = await user.createCashier({ name: result.name });\n      return res.send(new CashierResourcer(cashier));\n    } catch (err) {\n      return res.status(400).send({ message: 'error while creating cashier.' });\n    }\n  }\n\n  /**\n   * updates a instance of the resource.\n   *\n   * @param {Request}  req\n   * @param {Response} res\n   *\n   * @return {void}\n   */\n  async update(req, res) {\n    const id = req.params.cashierId;\n    const cashierSchema = Joi.object({\n      name: Joi.string().required(),\n    });\n    let result;\n    try {\n      result = validateSchema(req.body, cashierSchema);\n    } catch (e) {\n      if (e instanceof ValidationException) {\n        return res.status(422).send(e);\n      }\n    }\n    const cashier = await Cashier.findByPk(id);\n    if (!cashier) {\n      return res.status(404).send({ message: 'Not found' });\n    }\n    try {\n      const { name } = result;\n      await cashier.update({ name });\n      return res.send(new CashierResourcer(cashier));\n    } catch (err) {\n      return res.status(400).send({ message: 'error while updating cashier.' });\n    }\n  }\n\n  /**\n   * deletes a instance of the resource.\n   *\n   * @param {Request}  req\n   * @param {Response} res\n   *\n   * @return {void}\n   */\n  async destroy(req, res) {\n    const id = req.params.cashierId;\n\n    const cashier = await Cashier.findByPk(id);\n    if (!cashier) {\n      return res.status(404).send({ message: 'Not found' });\n    }\n    try {\n      await cashier.destroy();\n      return res.send({ message: 'cashier sucessfully deleted.' });\n    } catch (err) {\n      return res.status(400).send({ message: 'error while updating cashier.' });\n    }\n  }\n}\n\nexport default new CashierController();\n"],"file":"CashierController.js"}