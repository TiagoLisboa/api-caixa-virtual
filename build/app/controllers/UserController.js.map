{"version":3,"sources":["../../../src/app/controllers/UserController.js"],"names":["UserController","store","req","res","next","userSchema","Joi","object","name","string","required","email","password","result","body","e","ValidationException","status","send","user","User","create","UserResourcer","err","message"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;AAEA;;AAEA;;;;AAEA,MAAMA,cAAN,CAAqB;AACnB;;;;;;;;AAQA,QAAMC,KAAN,CAAYC,GAAZ,EAAiBC,GAAjB,EAAsBC,IAAtB,EAA4B;AAC1B,UAAMC,UAAU,GAAGC,aAAIC,MAAJ,CAAW;AAC5BC,MAAAA,IAAI,EAAEF,aAAIG,MAAJ,GAAaC,QAAb,EADsB;AAE5BC,MAAAA,KAAK,EAAEL,aAAIG,MAAJ,GACJC,QADI,GAEJC,KAFI,EAFqB;AAK5BC,MAAAA,QAAQ,EAAEN,aAAIG,MAAJ,GAAaC,QAAb;AALkB,KAAX,CAAnB;;AAOA,QAAIG,MAAJ;;AACA,QAAI;AACFA,MAAAA,MAAM,GAAG,6BAAeX,GAAG,CAACY,IAAnB,EAAyBT,UAAzB,CAAT;AACD,KAFD,CAEE,OAAOU,CAAP,EAAU;AACV,UAAIA,CAAC,YAAYC,4BAAjB,EAAsC;AACpC,eAAOb,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBH,CAArB,CAAP;AACD;AACF;;AACD,QAAI;AACF,YAAMI,IAAI,GAAG,MAAMC,cAAKC,MAAL,CAAYR,MAAZ,CAAnB;AACA,aAAOV,GAAG,CAACe,IAAJ,CAAS,IAAII,aAAJ,CAAkBH,IAAlB,CAAT,CAAP;AACD,KAHD,CAGE,OAAOI,GAAP,EAAY;AACZ,aAAOpB,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEM,QAAAA,OAAO,EAAE;AAAX,OAArB,CAAP;AACD;AACF;;AA/BkB;;eAkCN,IAAIxB,cAAJ,E","sourcesContent":["import Joi from 'joi';\n\nimport validateSchema from '../utils/validateSchema';\nimport ValidationException from '../exceptions/ValidationException';\n\nimport User from '../models/user';\n\nimport UserResourcer from '../resources/User';\n\nclass UserController {\n  /**\n   * stores a instance of the resource.\n   *\n   * @param {Request}  req\n   * @param {Response} res\n   *\n   * @return {void}\n   */\n  async store(req, res, next) {\n    const userSchema = Joi.object({\n      name: Joi.string().required(),\n      email: Joi.string()\n        .required()\n        .email(),\n      password: Joi.string().required(),\n    });\n    let result;\n    try {\n      result = validateSchema(req.body, userSchema);\n    } catch (e) {\n      if (e instanceof ValidationException) {\n        return res.status(422).send(e);\n      }\n    }\n    try {\n      const user = await User.create(result);\n      return res.send(new UserResourcer(user));\n    } catch (err) {\n      return res.status(400).send({ message: 'error while creating user.' });\n    }\n  }\n}\n\nexport default new UserController();\n"],"file":"UserController.js"}